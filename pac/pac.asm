INCLUDE Irvine32.inc

.data

ground BYTE "------------------------------------------------------------------------------------------------------------------------",0
ground1 BYTE "|",0ah,0
ground2 BYTE "|",0

;MENU
menuN   db "**********************************************************************************************************************",0
        db "*                                                                                                                    *",0
        db "*           ____    __    ____  _______  __        ______   ______   .___  ___.  _______                             *",0
        db "*           \\\\\  //\\  ///// ||| ____||  |      /      | /  __  \  |   \/   | |   ____|                            *",0
        db "*            \\\\\///\\\/////  ||||__   |  |     |  ,----'|  |  |  | |  \  /  | |  |__                               *",0
        db "*             \\\\ //\\ ////   ||| __|  |  |     |  |     |  |  |  | |  |\/|  | |   __|                              *",0
        db "*              \\\ //\\////    ||||____ |  `----.|  `----.|  `--'  | |  |  |  | |  |____                             *",0
        db "*           .___________./_____________||_______| \______| \______/  |__|  |__| |_______|                            *",0
        db "*           |||||||||||||/  __  \                                                                                    *",0
        db "*           `---|  |----|  |  |  |                                                                                   *",0
        db "*               |  |    |  |  |  |                                                                                   *",0
        db "*               |  |    |  `--'  |                                                                                   *",0
        db "*           .______|     _______/  ______ .___  ___.      ___      .__   __.                                         *",0
        db "*           ||||_  \    /   \     /      ||   \/   |     /   \     |  \ |  |                                         *",0
        db "*           ||||_)  |  /  ^  \   |  ,----'|  \  /  |    /  ^  \    |   \|  |                                         *",0
        db "*           ||||___/  /  /_\  \  |  |     |  |\/|  |   /  /_\  \   |  . `  |                                         *",0
        db "*           ||||     /  _____  \ |  `----.|  |  |  |  /  _____  \  |  |\   |                                         *",0
        db "*           ||||    /__/     \__\ \______||__|  |__| /__/     \__\ |__| \__|                                         *",0
        db "*           | _|    /__/     \__\ \______||__|  |__| /__/     \__\ |__| \__|                                         *",0
        db "*                                                                                                                    *",0
        db "*                                                                                                                    *",0
        db "*                                                                                                                    *",0
        db "*                                                 ENTER YOUR NAME:                                                   *",0
        db "*                                                                                                                    *",0
        db "*                                                                                                                    *",0
        db "*                                                                                                                    *",0
        db "**********************************************************************************************************************",0



menuG   db "**********************************************************************************************************************",0
        db "*                                                                                                                    *",0
        db "*                                                                                                                    *",0
        db "*                          .______      ___       ______ .___  ___.      ___      .__   __.                          *",0
        db "*                          |   _  \    /   \     /      ||   \/   |     /   \     |  \ |  |                          *",0
        db "*                          |  |_)  |  /  ^  \   |  ,----'|  \  /  |    /  ^  \    |   \|  |                          *",0
        db "*                          |   ___/  /  /_\  \  |  |     |  |\/|  |   /  /_\  \   |  . `  |                          *",0
        db "*                          |  |     /  _____  \ |  `----.|  |  |  |  /  _____  \  |  |\   |                          *",0
        db "*                          | _|    /__/     \__\ \______||__|  |__| /__/     \__\ |__| \__|                          *",0
        db "*                          | _|    /__/     \__\ \______||__|  |__| /__/     \__\ |__| \__|                          *",0
        db "*                          | _|    /__/     \__\ \______||__|  |__| /__/     \__\ |__| \__|                          *",0
        db "*                          | _|    /__/     \__\ \______||__|  |__| /__/     \__\ |__| \__|                          *",0
        db "*                          | _|    /__/     \__\ \______||__|  |__| /__/     \__\ |__| \__|                          *",0
        db "*                                                                                                                    *",0
        db "*                                                                                                                    *",0
        db "*                                                  PRESS P TO PLAY                                                   *",0
        db "*                                                                                                                    *",0
        db "*                                              PRESS I FOR INSTRUCTION                                               *",0
        db "*                                                                                                                    *",0
        db "*                                                                                                                    *",0
        db "*                                               Press H for highscore                                                *",0
        db "*                                                                                                                    *",0
        db "*                                                                                                                    *",0
        db "*                                                  PRESS X TO EXIT                                                   *",0
        db "*                                                                                                                    *",0
        db "*                                                                                                                    *",0
        db "**********************************************************************************************************************",0



Paused  db "**********************************************************************************************************************",0
        db "*                                                                                                                    *",0
        db "*                                                                                                                    *",0
        db "*                            .______      ___      __    __       _______. _______  _______                          *",0
        db "*                            |   _  \    /   \    |  |  |  |     /       ||   ____||       \                         *",0
        db "*                            |  |_)  |  /  ^  \   |  |  |  |    |   (----`|  |__   |  .--.  |                        *",0
        db "*                            |   ___/  /  /_\  \  |  |  |  |     \   \    |   __|  |  |  |  |                        *",0
        db "*                            |  |     /  _____  \ |  `--'  | .----)   |   |  |____ |  '--'  |                        *",0
        db "*                            | _|    /__/     \__\ \______/  |_______/    |_______||_______/                         *",0
        db "*                            | _|    /__/     \__\ \______/  |_______/    |_______||_______/                         *",0
        db "*                            | _|    /__/     \__\ \______/  |_______/    |_______||_______/                         *",0
        db "*                            | _|    /__/     \__\ \______/  |_______/    |_______||_______/                         *",0
        db "*                            | _|    /__/     \__\ \______/  |_______/    |_______||_______/                         *",0
        db "*                                                                                                                    *",0
        db "*                                                                                                                    *",0
        db "*                                                  PRESS P TO PLAY                                                   *",0
        db "*                                                                                                                    *",0
        db "*                                              PRESS I FOR INSTRUCTION                                               *",0
        db "*                                                                                                                    *",0
        db "*                                                  PRESS X TO EXIT                                                   *",0
        db "*                                                                                                                    *",0
        db "*                                                                                                                    *",0
        db "*                                                                                                                    *",0
        db "*                                                                                                                    *",0
        db "*                                                                                                                    *",0
        db "*                                                                                                                    *",0
        db "**********************************************************************************************************************",0

        
gameOver db "**********************************************************************************************************************",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                     _______      ___      .___  ___.  _______                                      *",0
         db "*                                    /  _____|    /   \     |   \/   | |   ____|                                     *",0
         db "*                                   |  |  __     /  ^  \    |  \  /  | |  |__                                        *",0
         db "*                                   |  | |_ |   /  /_\  \   |  |\/|  | |   __|                                       *",0
         db "*                                   |  |__| |  /  _____  \  |  |  |  | |  |____                                      *",0
         db "*                                    \______| /____    ____ |________._________|                                     *",0
         db "*                                    \______| /____    ____ |________._________|                                     *",0
         db "*                                    /  __  \  \   \  /   / |   ____||   _  \                                        *",0
         db "*                                   |  |  |  |  \   \/   /  |  |__   |  |_)  |                                       *",0
         db "*                                   |  |  |  |   \      /   |   __|  |      /                                        *",0
         db "*                                   |  `--'  |    \    /    |  |____ |  |\  \----.                                   *",0
         db "*                                    \______/      \__/     |_______|| _| `._____|                                   *",0
         db "*                                    \______/      \__/     |_______|| _| `._____|                                   *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                               PRESS P TO PLAY AGAIN                                                *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                  PRESS X TO EXIT                                                   *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "**********************************************************************************************************************",0

final    db "**********************************************************************************************************************",0
         db "* PRESS B TO BACK                                                                                    PRESS X TO EXIT *",0
         db "*                               _______.  ______   ______   .______      _______     _______.                        *",0                                                                   
         db "*                              /       | /      | /  __  \  |   _  \    |   ____|   /       |                        *",0                                                                   
         db "*                             |   (----`|  ,----'|  |  |  | |  |_)  |   |  |__     |   (----`                        *",0                                                                   
         db "*                              \   \    |  |     |  |  |  | |      /    |   __|     \   \                            *",0                                                                   
         db "*                          .----)   |   |  `----.|  `--'  | |  |\  \----|  |____.----)   |                           *",0                                                                   
         db "*                          |_______/     \______| \______/  | _| `._____|_______|_______/                            *",0                                                                   
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "**********************************************************************************************************************",0
 
 


instruct db "**********************************************************************************************************************",0
         db "* PRESS B TO GO BACK                                                                                                 *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*        __  .__   __.     _______.___________.______   __    __   ______  ___________.__    ______    __   __       *",0
         db "*       |  | |  \ |  |    /       |           |   _  \ |  |  |  | /      ||           |  |  /  __  \  |  \ |  |      *",0
         db "*       |  | |   \|  |   |   (----`---|  |----|  |_)  ||  |  |  ||  ,----'`---|  |----|  | |  |  |  | |   \|  |      *",0
         db "*       |  | |  . `  |    \   \       |  |    |      / |  |  |  ||  |         |  |    |  | |  |  |  | |  . `  |      *",0
         db "*       |  | |  |\   |.----)   |      |  |    |  |\  \ |  `--'  ||  `----.    |  |    |  | |  `--'  | |  |\   |      *",0
         db "*       |__| |__| \__||________|      |__|    |__| \__\ \______/  \______|    |__|    |__|  \______/  |__| \__|      *",0
         db "*       |__| |__| \__||________|      |__|    |__| \__\ \______/  \______|    |__|    |__|  \______/  |__| \__|      *",0
         db "*       |__| |__| \__||________|      |__|    |__| \__\ \______/  \______|    |__|    |__|  \______/  |__| \__|      *",0
         db "*                                                                                                                    *",0
         db "*                                                                                                                    *",0
         db "*                                  <*> USE 'W' , 'A' , 'S' , 'D' TO MOVE PACMAN                                      *",0
         db "*                                                                                                                    *",0
         db "*                                   <*> USE PACMAN TO EAT DOTS AND GAIN SCORES                                       *",0
         db "*                                                                                                                    *",0
         db "*                <*> YOU WILL START GAME WITH 3 LIVES AND THEY CAN BE LOST THROUGH VARIOUS METHODS                   *",0
         db "*                                                                                                                    *",0
         db "*                                 <*> TOUCHING GHOST WILL RESULT IN LASS OF LIFE                                     *",0
         db "*                                                                                                                    *",0
         db "*                        <*> THERE ARE 3 LEVELS WITH DIFFERENT DIFFICULTIES AND SURPRISES                            *",0
         db "*                                                                                                                    *",0
         db "*                               <*> TO PROGRESS TO THE NEXT LEVEL EAT ALL THE DOTS                                   *",0
         db "*                                                                                                                    *",0
         db "**********************************************************************************************************************",0

        
maze    db "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",0
	    db "2  . . . . . . . . . . . . . . 7 . . . . . . . . . . . . . . . . . . . . . . . .   .  *******************************2",0
	    db "2.77777777777 7777777 7777777777 77777777777777 777777777 .  7777777 777777777777  .  *******************************2",0
	    db "2. . . . . . . . . . . . . 7  . . . . . . . . . . . . . . . . . . . . . . . . .  . .  ******    ___     ___   *******2",0
	    db "2                          7  .  xxxxxxxxxxxxxxxxxxxxxxxx .                        .  ******  /_|||   /_|||   *******2",0
	    db "2. . . . . . . . . . . . .    .  x                      x .  77777777777777777777  .  ******    |||     |||   *******2",0
	    db "2                          7  .  x                      x .  . . . . . . . . . .   .  ******    |||     |||   *******2",0
	    db "277777777777777777777   .  7  .  x                      x .  77777777777777777777  .  ******    |||     |||   *******2",0
	    db "2                   7   .     .  x                      x .  7                  7  .  ******  ||||||| ||||||| *******2",0
	    db "2                   7   .  7  .  x                      x .  7                  7  .  ******                  *******2",0
	    db "277777777777777777777   .  7  .  x                      x .  77777777777777777777  .  ******                  *******2",0
	    db "2 . . . . . . . . . . . .     .  x                      x .  . . . . . . . . . .   .  ******  ______  _______ *******2",0
	    db "2 77777777777.777777777 .  7  .  x                      x .                        .  ******  ||  ||  ||   || *******2",0
	    db "2 77777777777.777777777 .  7  .  xxxxxxxxxxxxxxxxxxxxxxxx .  77777777777777777777  .  ******      ||  ||   || *******2",0
	    db "2                                                                                  .  ******   ===||  ||===|| *******2",0
	    db "2. . . . . . . . . . . . . 7 . . . . . . . . . . . . . . . . . . . . . . . . . .   .  ******      ||       || *******2",0
	    db "2. . . . . . . . . . . . . 7 . . . . . . . . . . . . . . . . . . . . . . . . . .   .  ******  ||__||       || *******2",0
	    db "2                                                         .                        .  *******************************2",0
	    db "2777777777777777777                                       .  77777777777777777777  .  *******************************2",0
	    db "2                 7 777777 77777.77777777777777.777777777 .  7                  7  .  *******************************2",0
	    db "2                 7 . . . . . . . . . . . . . .. . . . .  .  7                  7  .  *********  PACMAN   ***********2",0
	    db "2                 7 777777 77777.77777777777777.777777777 .  7                  7  .  *********  PACMAN   ***********2",0
	    db "2777777777777777777 7    7 7   7.7            7.7       7 .  77777777777777777777  .  *******************************2",0
	    db "2 . . . . . . . . . 7    7 7   7.7            7.7       7 .  . . . . . . . . . .   .  *******************************2",0
	    db "2 .7777777777777777 777777 77777.77777777777777.777777777 .  7777777 777777777777  .  *******************************2",0
	    db "2 . . . . . . .  . . . . . . . . . . . . . . . . . . . .  .  . . . . . . . . . .   .  *******************************2",0
	    db "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",0



maze2   db "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",0
	    db "2            7 . . . . . . . . x . . . . . . . . . . .  x . . . . . x . . . . . .  .  *******************************2",0
	    db "2             7777777 7777777777 77777777777777 777777777 .  7777777 777777777777  .  *******************************2",0
	    db "2              . . . .  .  7  .  . . . .   . . . . . . .  .  . . . . . . . . . .   .  ******    ___     ___   *******2",0
	    db "2                       .  7  .  x .  x .  xxxxxx . xxxxx .                        .  ******  /_|||   /_|||   *******2",0
	    db "2. . . . . . . . . . .  .     .  x .  x .    .  x . x . x .  77777777777777777777  .  ******    |||     |||   *******2",0
	    db "2                       .  7  .  x .  x .    .  x . x .   .  . . . . . . . . . .   .  ******    |||     |||   *******2",0
	    db "277777777777777777777   .  7  .  x .  x .  x .  x . x .   .  777777777 7777777777  .  ******    |||     |||   *******2",0
	    db "2                   7   .     .  x .  x .  x .    . x . x .  777777 . . . 7777777  .  ******  ||||||| ||||||| *******2",0
	    db "2                   7   .  7  .  x .  x .  x .    . x . x .  777777 . . . 7777777  .  ******                  *******2",0
	    db "277777777777777777777   .  7  .  x .  x .  x .  x . x . x .  777777777 7777777777  .  ******                  *******2",0
	    db "2 . . . . . . . . . . . .     .  x .  x .  x .  x .   . x .  . . . . . . . . . .   .  ******  ______  _______ *******2",0
	    db "2 77777777777.777777777 .  7  .  x .  x .  x .  x .   . x .  . . . . . . . . . .   .  ******  ||  ||  ||   || *******2",0
	    db "2 77777777777.777777777 .  7  .  xxxxxxxxxxx .  xxxxxxxxx .  77777777777777777777  .  ******      ||  ||   || *******2",0
	    db "2                                                                                  .  ******   ===||  ||===|| *******2",0
	    db "277      777777      7777777777777777      7777777777      777777777      7777777  .  ******      ||       || *******2",0
	    db "2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   .  ******  ||__||       || *******2",0
	    db "2777777777777777777   x   x   x   x   x   x   x   x   x   .  77777777777777777777  .  *******************************2",0
	    db "2                 7   x   x   x   x   x   x   x   x   x   .  7   IN THIS LEVEL  7  .  *******************************2",0
	    db "2                 7   x   x   x   x   x   x   x   x   x   .  7  KEEP AN EYE OUT 7  .  *******************************2",0
	    db "2                 7 . . . . . . . . . . . . . .. . . . .  .  7   BONUSES!!!!    7  .  *********  PACMAN   ***********2",0
	    db "2                 7 777777 77777.77777777777777.777777777 .  7                  7  .  *********  PACMAN   ***********2",0
	    db "2777777777777777777 7    7 7   7.7            7.7       7 .  77777777777777777777  .  *******************************2",0
	    db "2 . . . . . . . . . 7    7 7   7.7            7.7       7 .  . . . . . . . . . .   .  *******************************2",0
	    db "2 .7777777777777777 777777 77777.77777777777777.777777777 .  7777777 777777777777  .  *******************************2",0
	    db "2 . . . . . . .  . . . . . . . . . . . . . . . . . . . .  .  . . . . . . . . . .   .  *******************************2",0
	    db "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",0


maze3   db "11111111111111111111111111111111111111       1111111111111111111111111111111111111111111111111111111111111111111111111",0
	    db "2          7                   x . . . . . . . . . . .  x  . . . . x . . . . . .   .  *******************************2",0
	    db "2          777777777777777777777 77777777777777 777777777 .  7777777 777777777777  .  *******************************2",0
	    db "2          7                  .  . . . . . . . . . . . .  .  . . . . . . . . . .   .  ******    ___     ___   *******2",0
	    db "2                          7  .  x .  x .  xxxxxx . xxxxx .  . . . . . . . . . .   .  ******  /_|||   /_|||   *******2",0
	    db "2  . . . . . . . . . . . .    .  x .  x .    .  x . x . x .  77777777777777777777  .  ******    |||     |||   *******2",0
	    db "2                       .  7  .  x .  x .    .  x . x .   .  . . . . . . . . . .   .  ******    |||     |||   *******2",0
	    db "2                       .  7. .  x .  x .  x .  x . x .   .  777777777 7777777777  .  ******    |||     |||   *******2",0
	    db "2    7777777777777777 x .   . .  x .  x .  x .    . x . x .  777777 . . . 7777777  .  ******  ||||||| ||||||| *******2",0
	    db "     |PERHAPS THERE | x .  7. .  x .  x .  x .    . x . x .  777777 . . . 7777777  .  ******   .............          ",0
	    db "     |IS A SHORCUT? | x .  7. .  x .  x .  x .  x . x . x .  777777777 7777777777  .  ******   .............          ",0
	    db "277777777777777777777 x .   . .  x .  x .  x .  x .   . x .  . . . . . . . . . .   .  ******  ______  _______ *******2",0
	    db "2 77777777777.xxxxxxxxx .  7. .  x .  x .  x .  x .   . x .  . . . . . . . . . .   .  ******  ||  ||  ||   || *******2",0
	    db "2 77777777777.xxxxxxxxx .  7. .  xxxxxxxxxxx .  xxxxxxxxx .  77777777777777777777  .  ******      ||  ||   || *******2",0
	    db "2                                                                                  .  ******   ===||  ||===|| *******2",0
	    db "277      777777      7777777777777777      7777777777      777777777      7777777  .  ******      ||       || *******2",0
	    db "2. . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . .   .  ******  ||__||       || *******2",0
	    db "277 . 77 . 77 .  77   x   x   x   x   x   x   x   x   x   .  77777777777777777777  .  *******************************2",0
	    db "2   . 77 . 77 .  77   x   x   x   x   x   x   x   x   x   .  7   IN THIS LEVEL  7  .  *******************************2",0
	    db "2   . 7777777 .  77   x   x   x   x   x   x   x   x   x   .  7  KEEP AN EYE OUT 7  .  *******************************2",0
	    db "2   . 7777777 .  77 . . . . . . . . . . . . . .. . . . .  .  7   BONUSES!!!!    7  .  *********  ELAICHI  ***********2",0
	    db "2   . 77 . 77 .  777777 . 7777 . 77777 . 77777.777 . 777  .  7                  7  .  *********  ELAICHI  ***********2",0
	    db "277 . 77 . 77 .  777    . 7  . . . . . . . . 7.7   .   7  .  77777777777777777777  .  *******************************2",0
	    db "2 . . . . . . . .777    . 7    .       .     7.7   .   7  .  . . . . . . . . . .   .  *******************************2",0
	    db "2 .77777777777777777777 . 7777 . 77777 . 77777.777 . 777  .  7777777 777777777777  .  *******************************2",0
	    db "2 . . . . . . .  . . . . . . . . . . . . . . . . . . . .  .  . . . . . . . . . .   .  *******************************2",0
	    db "111111111111111111111111111111111111111      1111111111111111111111111111111111111111111111111111111111111111111111111",0


mazeT   db "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",0
	    db "2  . . . . . . . . . . . . . . 7 . . . . . . . . . . . . . . . . . . . . . . . .   .  *******************************2",0
	    db "2.77777777777 7777777 7777777777 77777777777777 777777777 .  7777777 777777777777  .  *******************************2",0
	    db "2. . . . . . . . . . . . . 7  . . . . . . . . . . . . . . . . . . . . . . . . .  . .  ******    ___     ___   *******2",0
	    db "2                          7  .  xxxxxxxxxxxxxxxxxxxxxxxx .                        .  ******  /_|||   /_|||   *******2",0
	    db "2. . . . . . . . . . . . .    .  x                      x .  77777777777777777777  .  ******    |||     |||   *******2",0
	    db "2                          7  .  x                      x .  . . . . . . . . . .   .  ******    |||     |||   *******2",0
	    db "277777777777777777777 x .  7  .  x                      x .  77777777777777777777  .  ******    |||     |||   *******2",0
	    db "2                   7 x .     .  x                      x .  7                  7  .  ******  ||||||| ||||||| *******2",0
	    db "2                   7 x .  7  .  x                      x .  7                  7  .  ******                  *******2",0
	    db "277777777777777777777 x .  7  .  x                      x .  77777777777777777777  .  ******                  *******2",0
	    db "2 . . . . . . . . . . . .     .  x                      x .  . . . . . . . . . .   .  ******  ______  _______ *******2",0
	    db "2 77777777777.777777777 .  7  .  x                      x .                        .  ******  ||  ||  ||   || *******2",0
	    db "2 77777777777.777777777 .  7  .  xxxxxxxxxxxxxxxxxxxxxxxx .  77777777777777777777  .  ******      ||  ||   || *******2",0
	    db "2                                                                                  .  ******   ===||  ||===|| *******2",0
	    db "2. . . . . . . . . . . . . 7 . . . . . . . . . . . . . . . . . . . . . . . . . .   .  ******      ||       || *******2",0
	    db "2. . . . . . . . . . . . . 7 . . . . . . . . . . . . . . . . . . . . . . . . . .   .  ******  ||__||       || *******2",0
	    db "2                                                         .                        .  *******************************2",0
	    db "2777777777777777777                                       .  77777777777777777777  .  *******************************2",0
	    db "2                 7 777777 77777.77777777777777.777777777 .  7                  7  .  *******************************2",0
	    db "2                 7 . . . . . . . . . . . . . .. . . . .  .  7                  7  .  *********  PACMAN   ***********2",0
	    db "2                 7 777777 77777.77777777777777.777777777 .  7                  7  .  *********  PACMAN   ***********2",0
	    db "2777777777777777777 7    7 7   7.7            7.7       7 .  77777777777777777777  .  *******************************2",0
	    db "2 . . . . . . . . . 7    7 7   7.7            7.7       7 .  . . . . . . . . . .   .  *******************************2",0
	    db "2 .7777777777777777 777777 77777.77777777777777.777777777 .  7777777 777777777777  .  *******************************2",0
	    db "2 . . . . . . .  . . . . . . . . . . . . . . . . . . . .  .  . . . . . . . . . .   .  *******************************2",0
	    db "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111",0

		
mapSize dd 3213
mazewidth db 119

Pname byte 255 dup(0)


tempX byte ?
tempY byte ?


rollNum0 byte "   ___       ___     ______  _______ ",0ah,0
rollNum1 byte " /_|||     /_|||     ||  ||  ||   || ",0ah,0
rollNum2 byte "   |||       |||         ||  ||   || ",0ah,0
rollNum3 byte "   |||       |||      ===||  ||===|| ",0ah,0
rollNum4 byte "   |||       |||         ||       || ",0ah,0
rollNum5 byte " |||||||   |||||||   ||__||       || ",0ah,0

temp byte ?

strScore BYTE "Your score is: ",0
score dd 321

strLives Byte "LIVES: ",0
lives byte 3

strLevel byte "LEVEL: ",0
level byte 1

xPos BYTE 50
yPos BYTE 17

xPosG1 BYTE 3
yPosG1 BYTE 5

xPosG2 BYTE 4
yPosG2 BYTE 5

xPosG3 BYTE 5
yPosG3 BYTE 5

xCoinPos BYTE ?
yCoinPos BYTE ?

inputChar BYTE ?

lastMove byte 1

alternate byte 1
alternate2 byte 1

lastMove2 byte 2
lastMove3 byte 2
lastMove4 byte 2

filename byte "score.txt",0
fileHandle HANDLE ?
filestr byte 1000 dup(' ')
buffSize dd 1000

.code
main PROC
restartGame:

    call reInitialize

    ; draw ground at (0,29):
    mov eax,blue ;(black * 16)
    call SetTextColor
    mov dl,0
    mov dh,29
    call Gotoxy
    mov edx,OFFSET ground
    call WriteString
    mov dl,0
    mov dh,1
    call Gotoxy
    mov edx,OFFSET ground
    call WriteString


    mov ecx,27
    mov dh,2
    l1:
    mov dl,0
    call Gotoxy
    mov edx,OFFSET ground1
    call WriteString
    ;inc dh
    loop l1


    mov ecx,27
    mov dh,2
    mov temp,dh
    l2:
    mov dh,temp
    mov dl,119
    call Gotoxy
    mov edx,OFFSET ground2
    call WriteString
    inc temp
    loop l2
    call DrawPlayer

    call CreateRandomCoin
    call DrawCoin

    call Randomize

    call drawNMENU
    call drawGMENU

    call drawMaze
    ;call drawROLLNO
    ;call drawFinal

    ;call addToFile
    gameLoop:

        

        call DRAWHEADER
       
        call Readkey
        mov inputChar,al
        call movePLayer 
        call UpdatePlayer
        call DrawPlayer
        call teleport
        cmp alternate,1
        jne alt
        call moveGhost
        alt:
        call drawGHOST
        xor alternate,1
        cmp [level],3
        jne skip
        cmp alternate2,1
        jne alt2
        call moveGhost2

        call moveGhost3
        alt2:
        call drawGHOST2
        call drawGHOST3
        xor alternate2,1
        skip:
        call Delay
        ;call Delay
        call dotCheck
        cmp al, 1
        je restartGame
        call checkCurrentBonus

    
    ; exit game if user types 'x':
    cmp inputChar,"x"
    je exitGame

    cmp inputChar,"p"
    jne g2
    call drawPAUSE

    g2:

    call GameOverCheck
    cmp al,1
    je gameOve


    jmp gameLoop

    gameOve:
    call drawGameOver
    jmp restartGame

    exitGame:
    exit
main ENDP

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

teleport PROC

    mov dl, xPos
    mov dh, yPos

    cmp dl,1
    jne next1
    call gotoxy
    mov al," "
    call writechar
    mov xPos, 118
    jmp next4

    next1:
    cmp dl,118
    jne next2
    call gotoxy
    mov al," "
    call writechar
    mov xPos,1
    jmp next4

    next2: 
    cmp dh,2
    jne next3
    call gotoxy
    mov al," "
    call writechar
    mov yPos,28
    jmp next4


    next3:
    cmp dh,28
    jne next4
    call gotoxy
    mov al," "
    call writechar
    mov yPos,2

    next4:


ret
teleport ENDP


checkCurrentBonus Proc

mov edi,offset mazeT
    cmp [level],2
    jl bonusPresent
    mov ecx,mapSize
    l1:
        mov al, [edi]
        cmp al,'b'
        je BonusPresent
        inc edi
        loop l1
    call createBonus
    BonusPresent:
ret

ret
checkCurrentBonus ENDP

createBonus PROC
    
    call randomize
    mov eax, 119
    call randomrange

    mov xcoinPos,al

     call randomize
    mov eax, 27
    call randomrange

    mov xcoinPos,al

    movzx eax, xcoinPos
    movzx ebx, ycoinPos

    mov esi, OFFSET mazeT
	push ebx
	mov ebx, LENGTHOF mazeT

    sub eax,2

	mul ebx
	pop ebx
	add eax, ebx
	add esi, eax
    dec esi
	mov al, [esi]

	cmp al,'.'
    je okay
    cmp al,' '
    je okay

    l1:
        inc esi
        mov al,[esi]
        cmp al,'.'
        je okay
        cmp al,' '
        je okay
        jmp l1

    okay:
    mov al,'b'
    mov [esi], al
    call drawMazeT
ret
createBonus ENDP

gameOverCheck PROC

    cmp [lives],0
    jne notOver
    mov al,1
    ret

    notOver:
    mov al,0
ret
gameOverCheck ENDP

dotCheck PROC
    mov edi,offset mazeT
    mov ecx,mapSize
    l1:
        mov al, [edi]
        cmp al,'.'
        je DotsPresent
        inc edi
        loop l1
    inc [level]
    cmp [level],4
    je next
    call levelChange;
    ret
    next:
    call drawFinal
    dotsPresent:
ret
dotCheck ENDP

levelChange Proc

call resetLevel

ret
levelChange ENDP

drawFinal PROC

reDIsp:

    mov eax, yellow + (black * 16)
    call SetTextColor
    mov al,0
    mov ecx, 27
    mov ebx, 119
    mov edx,OFFSET final
   
    mov tempx,1
    mov tempy,2

    l1:
    push edx
    mov dl,tempx
    mov dh,tempy
    call goToXY
    inc dh
    mov tempy,dh
    pop edx
    call delay
    call WriteString

    add edx,ebx

    loop l1

    l2:

    cmp [lives],0
    jne skip
    jmp okay
    cmp[level],4
    jne skip
okay:
    call AddtoFile
skip:
    mov edx,offset filename
    call OpenINputFile
    mov fileHandle,eax

    mov edx, offset filestr
    mov ecx, sizeof filestr

    call ReadFromFile
    mov filestr[eax],0
    mov buffSize,eax
    mov eax, fileHandle
    call closeFile

    mov dl, 0
    mov dh, 15
    call gotoxy
    mov edx,offset filestr

    call writeString
    call readChar

    cmp al, 'x'
    jne next

    exit

    next:

    cmp al, 'b'
    jne reDisp
    mov al,1
    ret


ret
drawFinal ENDP

addToFile PROC

    mov edx,offset filename
    call OpenINputFile
    mov fileHandle,eax

    mov edx, offset filestr
    mov ecx, sizeof filestr

    call ReadFromFile
    mov filestr[eax],0
    mov buffSize,eax
    mov eax, fileHandle
    call closeFile

	mov edi, offset filestr
    mov ecx, buffSize
    lop1:
        mov bl,[edi]
        cmp bl,' '
        jne sk5
        inc edi
        loop lop1
    mov eax,0
    mov buffSize,eax
    mov al, ' '
    mov [edi], al
    sk5:
	mov edi, offset filestr
    mov eax, buffSize
    add edi,eax

    

    mov al,[edi]
    cmp al,0ah
    jne noInc
    inc edi
    add [buffSize],1
    noInc:

    mov esi,offset Pname
	j2:
	mov al,[esi]
	mov [edi],al
	inc edi
    add [buffSize],1
	inc esi
    mov al,[esi]
    cmp al,0
    jne j2
    
    mov eax,20
    add edi,eax
    add [buffSize],20


    mov ecx,0
	mov eax, score
    cmp eax,0
    jne p1
    mov al,'0'
    mov [edi],al
    jmp sk2
    p1:
        cmp eax,0
        je sk1
        mov ebx,10
        mov edx,0
        div ebx
        add edx,48
        mov [edi],dl
	    dec edi
        inc ecx
        jmp p1

    sk1:
    add edi,ecx
    sk2:

    mov eax,15
	add edi,eax
    add [buffSize],15


    mov al,level
    add al,48
	mov[edi], al

    inc edi
    add [buffSize],1
    mov al,0ah
    mov [edi],al

    inc edi
    add [buffSize],1
    mov al,0
    mov [edi],al

    mov edx, offset filename
    call CreateOutputFile
    mov fileHandle,eax
    mov edx, offset filestr
    mov ecx, buffsize
    call WriteToFile
	mov eax, fileHandle
	call CloseFile
    ret
AddToFile ENDP

drawGameOver PROC

reDIsp:

    mov eax, yellow + (black * 16)
    call SetTextColor
    mov al,0
    mov ecx, 27
    mov ebx, 119
    mov edx,OFFSET gameOver
   
    mov tempx,1
    mov tempy,2

    l1:
    push edx
    mov dl,tempx
    mov dh,tempy
    call goToXY
    inc dh
    mov tempy,dh
    pop edx
    call delay
    call WriteString

    add edx,ebx

    loop l1

    l2:

    call readChar

    cmp al, 'x'
    jne next

    call drawFinal
    exit

    next:

    cmp al, 'p'
    jne reDisp
    mov al,1
    call drawFinal
    ret

ret
drawGameOver ENDP

drawHEADER PROC

    mov eax,white;
    call setTextColor
    ; draw score:
    mov dl,0
    mov dh,0
    call Gotoxy
    mov edx,OFFSET strScore
    call WriteString
    mov eax,score
    call WriteInt
    
    ; DRAW LEVEL
    mov dl,60
    mov dh,0
    call Gotoxy
    mov edx,OFFSET strLevel
    call WriteString
    movzx eax,level
    call WriteInt
    
    ;Draw LIVES
     mov dl,30
    mov dh,0
    call Gotoxy
    mov edx,OFFSET strLives
    call WriteString
    movzx eax ,lives
    call WriteInt

ret
drawHEADER ENDP

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GHOST FUNTIONS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
updateGhost Proc

    mov eax, white + (black * 16)
    call setTextColor

    movzx eax, yposG1
    movzx ebx, xposG1

    mov esi, OFFSET mazeT
	push ebx
	mov ebx, LENGTHOF mazeT

    sub eax,2

	mul ebx
	pop ebx
	add eax, ebx
	add esi, eax
    dec esi
	mov al, [esi]

    mov dh, yposG1
    mov dl, xposG1

    call gotoxy
    call writechar

	ret
ret
updateGhost ENDP

moveGHOST PROC

    mov ecx,0
recheck:
    cmp [level],2
    jge betterMoveMent
    cmp ecx, 0
    je skip
    call randomize
    mov eax,4
    call randomRange
    jmp skip1

betterMovement:

    mov eax,2
    mov dl,xPos
    cmp xPosG1,dl
    je noSkip

    mov eax,0
    mov dl,yPos
    cmp yPosG1,dl
    je noSkip

    cmp ecx, 0
    je skip
 

    call Randomize
    mov eax, 3
    call randomRange
noSkip:
    cmp al,1
    jge preferVert


    mov dl,xPos
    cmp xPosG1,dl

    jge goLeft
    
    mov eax,3
    jmp skip1

    goLeft:
    
    mov eax,2
    jmp skip1

preferVert:
    mov dl,yPos
    cmp yPosG1,dl
    jle goDown
    
    mov eax,0
    jmp skip1;

    goDown:
    
    mov eax,1
    

    skip1:

    movzx dx,lastmove2
    mov lastMove2,al

    skip:
    call updateGhost
    movzx dx,lastmove2
    push dx
    
    cmp lastMove2,0
    je moveUp
    
    cmp LastMove2,1
    je moveDown
    
    cmp LastMove2,2
    je moveLeft
    
    cmp LastMove2,3
    je moveRight

    jmp gameloop

    moveUp:
    call checkUPG
    call boundCHECKG
    cmp al,0
    je re1

    dec yPosG1
    call DrawGhost
    jmp gameLoop
    
    moveDown:
    call checkDOWNG
    call boundCHECKG
    cmp al,0
    je re1

    inc yPosG1
    call DrawGhost
    jmp gameLoop
    
    moveLeft:
    call checkLEFTG
    call boundCHECKG
    cmp al,0
    je re1

    dec xPosG1
    call DrawGhost
    jmp gameLoop
    
    moveRight:
    call checkRIGHTg
    call boundCHECKg
    cmp al,0
    je re1

    inc xPosG1
    call DrawGhost
    jmp gameLoop

    re1:
    pop dx
    mov lastMove2,dl
    inc ecx
    cmp ecx,2
    jge endmove
    jmp recheck

    gameLoop:
    
    pop dx

    endmove:
    mov al,xPOS
    mov ah,yPos
    mov bl,xPosg1
    mov bh,yPosG1

    cmp al,bl
    jne noLives
    cmp ah,bh
    jne noLives

    dec [lives]
    mov xPos,50
    mov yPos,17

    noLives:

ret
moveGHOST ENDP

DrawGhost PROC
    
    mov eax,blue ;(blue*16)
    call SetTextColor
    mov dl,xPosG1
    mov dh,yPosG1
    call Gotoxy
    mov al,"O"
    call WriteChar
    ret
DrawGhost ENDP

CheckPosG PROC

	mov esi, OFFSET mazeT
	push ebx
	mov ebx, LENGTHOF mazeT

    sub eax,2

	mul ebx
	pop ebx
	add eax, ebx
	add esi, eax
    dec esi
	mov al, [esi]

	ret

CheckPosG ENDP

checkUPG PROC

    push ebx
    movzx ebx, xPosG1
    movzx eax, yPosG1
    dec eax
    call checkPOSG
    pop ebx

ret
checkUPG ENDP

checkDOWNG PROC

    push ebx
    movzx ebx, xPosG1
    movzx eax, yPosG1
    inc eax
    
    call checkPOSG
    pop ebx

ret
checkDOWNG ENDP

checkLEFTG PROC

    push ebx
    movzx ebx, xPosG1
    movzx eax, yPosG1

    dec ebx

    call checkPOSG

    pop ebx

ret
checkLEFTG ENDP

checkRIGHTG PROC

    push ebx
    movzx ebx, xPosG1
    movzx eax, yPosG1

    inc ebx

    call checkPOSG
    pop ebx

ret
checkRIGHTG ENDP


boundCHECKG PROC

    cmp al, ' '
    je okay

    cmp al, '.'
    je okay

    cmp al, 'b'
    je okay

    mov al,0
    ret
    okay1:

    okay:
    mov al,1

ret
boundCHECKG ENDP


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;













;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GHOST 2 FUNTIONS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
updateGhost2 Proc

    mov eax, white + (black * 16)
    call setTextColor

    movzx eax, yposG2
    movzx ebx, xposG2

    mov esi, OFFSET mazeT
	push ebx
	mov ebx, LENGTHOF mazeT

    sub eax,2

	mul ebx
	pop ebx
	add eax, ebx
	add esi, eax
    dec esi
	mov al, [esi]

    mov dh, yposG2
    mov dl, xposG2

    call gotoxy
    call writechar

	ret
ret
updateGhost2 ENDP

moveGHOST2 PROC

    mov ecx,0
recheck:
    cmp [level],2
    jge betterMoveMent
    cmp ecx, 0
    je skip
    call randomize
    mov eax,4
    call randomRange
    jmp skip1

betterMovement:

    mov eax,2
    mov dl,xPos
    cmp xPosG2,dl
    je noSkip

    mov eax,0
    mov dl,yPos
    cmp yPosG2,dl
    je noSkip

    cmp ecx, 0
    je skip
 

    call Randomize
    mov eax, 3
    call randomRange
noSkip:
    cmp al,1
    jge preferVert


    mov dl,xPos
    cmp xPosG2,dl

    jge goLeft
    
    mov eax,3
    jmp skip1

    goLeft:
    
    mov eax,2
    jmp skip1

preferVert:
    mov dl,yPos
    cmp yPosG2,dl
    jle goDown
    
    mov eax,0
    jmp skip1;

    goDown:
    
    mov eax,1
    

    skip1:

    movzx dx,lastmove3
    mov lastMove3,al

    skip:
    call updateGhost2
    movzx dx,lastmove3
    push dx
    
    cmp lastMove3,0
    je moveUp
    
    cmp LastMove3,1
    je moveDown
    
    cmp LastMove3,2
    je moveLeft
    
    cmp LastMove3,3
    je moveRight

    jmp gameloop

    moveUp:
    call checkUPG2
    call boundCHECKG2
    cmp al,0
    je re1

    dec yPosG2
    call DrawGhost2
    jmp gameLoop
    
    moveDown:
    call checkDOWNG2
    call boundCHECKG2
    cmp al,0
    je re1

    inc yPosG2
    call DrawGhost2
    jmp gameLoop
    
    moveLeft:
    call checkLEFTG2
    call boundCHECKG2
    cmp al,0
    je re1

    dec xPosG2
    call DrawGhost2
    jmp gameLoop
    
    moveRight:
    call checkRIGHTg2
    call boundCHECKg2
    cmp al,0
    je re1

    inc xPosG2
    call DrawGhost2
    jmp gameLoop

    re1:
    pop dx
    mov lastMove3,dl
    inc ecx
    cmp ecx,2
    jge endmove
    jmp recheck

    gameLoop:
    
    pop dx

    endmove:
    mov al,xPOS
    mov ah,yPos
    mov bl,xPosg2
    mov bh,yPosG2

    cmp al,bl
    jne noLives
    cmp ah,bh
    jne noLives

    dec [lives]
    mov xPos,50
    mov yPos,17

    noLives:

ret
moveGHOST2 ENDP

DrawGhost2 PROC
    
    mov eax,red ;(blue*16)
    call SetTextColor
    mov dl,xPosG2
    mov dh,yPosG2
    call Gotoxy
    mov al,"O"
    call WriteChar
    ret
DrawGhost2 ENDP

CheckPosG2 PROC

	mov esi, OFFSET mazeT
	push ebx
	mov ebx, LENGTHOF mazeT

    sub eax,2

	mul ebx
	pop ebx
	add eax, ebx
	add esi, eax
    dec esi
	mov al, [esi]

	ret

CheckPosG2 ENDP

checkUPG2 PROC

    push ebx
    movzx ebx, xPosG2
    movzx eax, yPosG2
    dec eax
    call checkPOSG2
    pop ebx

ret
checkUPG2 ENDP

checkDOWNG2 PROC

    push ebx
    movzx ebx, xPosG2
    movzx eax, yPosG2
    inc eax
    
    call checkPOSG2
    pop ebx

ret
checkDOWNG2 ENDP

checkLEFTG2 PROC

    push ebx
    movzx ebx, xPosG2
    movzx eax, yPosG2

    dec ebx

    call checkPOSG2

    pop ebx

ret
checkLEFTG2 ENDP

checkRIGHTG2 PROC

    push ebx
    movzx ebx, xPosG2
    movzx eax, yPosG2

    inc ebx

    call checkPOSG2
    pop ebx

ret
checkRIGHTG2 ENDP


boundCHECKG2 PROC

    cmp al, ' '
    je okay

    cmp al, '.'
    je okay

    cmp al, 'b'
    je okay

    mov al,0
    ret
    okay1:

    okay:
    mov al,1

ret
boundCHECKG2 ENDP


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;












;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GHOST3 FUNTIONS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
updateGhost3 Proc

    mov eax, white + (black * 16)
    call setTextColor

    movzx eax, yposG3
    movzx ebx, xposG3

    mov esi, OFFSET mazeT
	push ebx
	mov ebx, LENGTHOF mazeT

    sub eax,2

	mul ebx
	pop ebx
	add eax, ebx
	add esi, eax
    dec esi
	mov al, [esi]

    mov dh, yposG3
    mov dl, xposG3

    call gotoxy
    call writechar

	ret
ret
updateGhost3 ENDP

moveGHOST3 PROC

    mov ecx,0
recheck:
    cmp [level],2
    jge betterMoveMent
    cmp ecx, 0
    je skip
    call randomize
    mov eax,4
    call randomRange
    jmp skip1

betterMovement:

    mov eax,2
    mov dl,xPos
    cmp xPosG3,dl
    je noSkip

    mov eax,0
    mov dl,yPos
    cmp yPosG3,dl
    je noSkip

    cmp ecx, 0
    je skip
 

    call Randomize
    mov eax, 3
    call randomRange
noSkip:
    cmp al,1
    jge preferVert


    mov dl,xPos
    cmp xPosG3,dl

    jge goLeft
    
    mov eax,3
    jmp skip1

    goLeft:
    
    mov eax,2
    jmp skip1

preferVert:
    mov dl,yPos
    cmp yPosG3,dl
    jle goDown
    
    mov eax,0
    jmp skip1;

    goDown:
    
    mov eax,1
    

    skip1:

    movzx dx,lastmove4
    mov lastMove4,al

    skip:
    call updateGhost3
    movzx dx,lastmove4
    push dx
    
    cmp lastMove4,0
    je moveUp
    
    cmp LastMove4,1
    je moveDown
    
    cmp LastMove4,2
    je moveLeft
    
    cmp LastMove4,3
    je moveRight

    jmp gameloop

    moveUp:
    call checkUPG3
    call boundCHECKG3
    cmp al,0
    je re1

    dec yPosG3
    call DrawGhost3
    jmp gameLoop
    
    moveDown:
    call checkDOWNG3
    call boundCHECKG3
    cmp al,0
    je re1

    inc yPosG3
    call DrawGhost3
    jmp gameLoop
    
    moveLeft:
    call checkLEFTG3
    call boundCHECKG3
    cmp al,0
    je re1

    dec xPosG3
    call DrawGhost3
    jmp gameLoop
    
    moveRight:
    call checkRIGHTg3
    call boundCHECKg3
    cmp al,0
    je re1

    inc xPosG3
    call DrawGhost3
    jmp gameLoop

    re1:
    pop dx
    mov lastMove4,dl
    inc ecx
    cmp ecx,2
    jge endmove
    jmp recheck

    gameLoop:
    
    pop dx

    endmove:
    mov al,xPOS
    mov ah,yPos
    mov bl,xPosg3
    mov bh,yPosG3

    cmp al,bl
    jne noLives
    cmp ah,bh
    jne noLives

    dec [lives]
    mov xPos,50
    mov yPos,17

    noLives:

ret
moveGHOST3 ENDP

DrawGhost3 PROC
    
    mov eax,green ;(blue*16)
    call SetTextColor
    mov dl,xPosG3
    mov dh,yPosG3
    call Gotoxy
    mov al,"O"
    call WriteChar
    ret
DrawGhost3 ENDP

CheckPosG3 PROC

	mov esi, OFFSET mazeT
	push ebx
	mov ebx, LENGTHOF mazeT

    sub eax,2

	mul ebx
	pop ebx
	add eax, ebx
	add esi, eax
    dec esi
	mov al, [esi]

	ret

CheckPosG3 ENDP

checkUPG3 PROC

    push ebx
    movzx ebx, xPosG3
    movzx eax, yPosG3
    dec eax
    call checkPOSG3
    pop ebx

ret
checkUPG3 ENDP

checkDOWNG3 PROC

    push ebx
    movzx ebx, xPosG3
    movzx eax, yPosG3
    inc eax
    
    call checkPOSG3
    pop ebx

ret
checkDOWNG3 ENDP

checkLEFTG3 PROC

    push ebx
    movzx ebx, xPosG3
    movzx eax, yPosG3

    dec ebx

    call checkPOSG3

    pop ebx

ret
checkLEFTG3 ENDP

checkRIGHTG3 PROC

    push ebx
    movzx ebx, xPosG3
    movzx eax, yPosG3

    inc ebx

    call checkPOSG3
    pop ebx

ret
checkRIGHTG3 ENDP


boundCHECKG3 PROC

    cmp al, ' '
    je okay

    cmp al, '.'
    je okay

    cmp al, 'b'
    je okay

    mov al,0
    ret
    okay1:

    okay:
    mov al,1

ret
boundCHECKG3 ENDP


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

































movePlayer PROC

    mov ecx,0
recheck:
    ; get user key input:
    cmp al,'w'
    je skip1
    cmp al,'s'
    je skip1
    cmp al,'a'
    je skip1
    cmp al,'d'
    je skip1

    jmp skip

    skip1:

    movzx dx,lastmove
    mov lastMove,al

    skip:
    push dx
    
    cmp lastMove,"w"
    je moveUp
    
    cmp LastMove,"s"
    je moveDown
    
    cmp LastMove,"a"
    je moveLeft
    
    cmp LastMove,"d"
    je moveRight

    jmp gameloop

    moveUp:
    call checkUP
    call boundCHECK
    cmp al,0
    je re1

    call UpdatePlayer
    dec yPos
    call DrawPlayer
    jmp gameLoop
    
    moveDown:
    call checkDOWN
    call boundCHECK
    cmp al,0
    je re1

    call UpdatePlayer
    inc yPos
    call DrawPlayer
    jmp gameLoop
    
    moveLeft:
    call checkLEFT
    call boundCHECK
    cmp al,0
    je re1

    call UpdatePlayer
    dec xPos
    call DrawPlayer
    jmp gameLoop
    
    moveRight:
    call checkRIGHT
    call boundCHECK
    cmp al,0
    je re1

    call UpdatePlayer
    inc xPos
    call DrawPlayer
    jmp gameLoop

    re1:
    pop dx
    mov lastMove,dl
    inc ecx
    cmp ecx,2
    jge endmove
    jmp recheck

    gameLoop:
    
    pop dx

    endmove:

ret
movePlayer ENDP

DrawPlayer PROC
    ; draw player at (xPos,yPos):
    mov eax,yellow ;(blue*16)
    call SetTextColor
    mov dl,xPos
    mov dh,yPos
    call Gotoxy
    mov al,"X"
    call WriteChar
    ret
DrawPlayer ENDP

UpdatePlayer PROC
    mov dl,xPos
    mov dh,yPos
    call Gotoxy
    mov al," "
    call WriteChar

    movzx ebx, xPos
    movzx eax, yPos

    mov esi, OFFSET mazeT
	push ebx
	mov ebx, LENGTHOF mazeT

    sub eax,2

	mul ebx
	pop ebx
	add eax, ebx
	add esi, eax
    dec esi
	
    mov al, " "
    mov [esi],al

    ;call drawMazeT

    ret
UpdatePlayer ENDP

DrawCoin PROC
    mov eax,yellow ;(red * 16)
    call SetTextColor
    mov dl,xCoinPos
    mov dh,yCoinPos
    call Gotoxy
    mov al,"."
    call WriteChar
    ret
DrawCoin ENDP

CreateRandomCoin PROC
    mov eax,55
    inc eax
    call RandomRange
    mov xCoinPos,al
    mov yCoinPos,27
    ret
CreateRandomCoin ENDP

drawMAze PROC

   call drawMazeT

ret
drawMaze ENDP

drawMAzeT PROC

    mov esi, offset mazeT
    mov ecx,mapSize
    mov dl,1
    mov dh,2

    l1:
        movzx eax,byte ptr[esi]
        cmp al, '7'
        je colorRed

        cmp al,'x'
        je colorGreen

        cmp al,'*'
        je colorBlue

        cmp al, '/'
        je colorYellow

        cmp al, '|'
        je colorYellow

        cmp al, '='
        je colorYellow

        cmp al, '_'
        je colorYellow

         cmp al, 'b'
        je colorYellow

        mov eax,white ;(red * 16)
        call SetTextColor
        jmp loopend

        colorRed:
        mov eax,red ;(red * 16)
        call SetTextColor
        jmp loopend

        colorGreen:
        mov eax,green ;(red * 16)
        call SetTextColor
        jmp loopend

        colorBlue:
        mov eax,blue ;(red * 16)
        call SetTextColor
        jmp loopend

        colorYellow:
        mov eax,yellow ;(red * 16)
        call SetTextColor

        loopend:
        call gotoxy
        mov al,[esi]
        call writechar
        inc dl
        cmp dl,119
        jne skip
        inc dh
        mov dl,0
        skip:
        inc esi
        loop l1

ret
drawMazeT ENDP

drawNMENU PROC

    mov eax, yellow + (black * 16)
    call SetTextColor
    mov ecx, 27
    mov ebx, 119
    mov edx,OFFSET menuN
   
    mov tempx,1
    mov tempy,2

    l1:
    push edx
    mov dl,tempx
    mov dh,tempy
    call goToXY
    inc dh
    mov tempy,dh
    pop edx
    call WriteString

    add edx,ebx

    loop l1

    l2:

    mov dl, 70
    mov dh, 24
    mov ecx, 255
    call goToXY
    mov edx, offset Pname
    call readString


ret
drawNMENU ENDP

drawIMENU PROC

mov eax, yellow + (black * 16)
    call SetTextColor
    mov ecx, 27
    mov ebx, 119
    mov edx,OFFSET instruct
   
    mov tempx,1
    mov tempy,2

    l1:
    push edx
    mov dl,tempx
    mov dh,tempy
    call goToXY
    inc dh
    mov tempy,dh
    pop edx
    call delay
    call WriteString

    add edx,ebx

    loop l1

    l2:

    call readChar

    cmp al, 'b'
    je next

    jmp l2

    next:

ret
drawIMENU ENDP

drawPause PROC

    mov eax, yellow + (black * 16)
    call SetTextColor
    mov ecx, 27
    mov ebx, 119
    mov edx,OFFSET paused
   
    mov tempx,1
    mov tempy,2

    l1:
    push edx
    mov dl,tempx
    mov dh,tempy
    call goToXY
    inc dh
    mov tempy,dh
    pop edx
    call delay
    call WriteString

    add edx,ebx

    loop l1

    l2:

    call readChar

    cmp al, 'x'
    jne next

    exit

    next:

    cmp al, 'p'
    jne next2
    call drawmazeT
    ret

    next2:

    cmp al, 'i'
    jne l2

    call drawIMENU
    call drawPause

ret

drawPause ENDP

drawGMENU PROC

    mov eax, yellow + (black * 16)
    call SetTextColor
    mov ecx, 27
    mov ebx, 119
    mov edx,OFFSET menuG
   
    mov tempx,1
    mov tempy,2

    l1:
    push edx
    mov dl,tempx
    mov dh,tempy
    call goToXY
    inc dh
    mov tempy,dh
    pop edx
    call delay
    call WriteString

    add edx,ebx

    loop l1

    l2:

    call readChar

    cmp al, 'x'
    jne next

    exit

    next:

    cmp al, 'p'
    jne next2
    ret

    next2:

    cmp al, 'i'
    jne next3
    call drawIMENU
    call drawGmenu

    next3:
    cmp al, 'h'
    jne l2
   call drawFinal
   call drawGmenu



ret
drawGMENU ENDP

CheckPos PROC

	mov esi, OFFSET mazeT
	push ebx
	mov ebx, LENGTHOF mazeT

    sub eax,2

	mul ebx
	pop ebx
	add eax, ebx
	add esi, eax
    dec esi
	mov al, [esi]
    cmp al, 'b'
    je removeBonus
	ret

    removebonus:
    mov dh,' '
    mov [esi],dh
    ret

CheckPos ENDP

checkUP PROC

    push ebx
    movzx ebx, xPos
    movzx eax, yPos
    dec eax
    call checkPOS
    pop ebx

ret
checkUP ENDP

checkDOWN PROC

    push ebx
    movzx ebx, xPos
    movzx eax, yPos
    inc eax
    
    call checkPOS
    pop ebx

ret
checkDOWN ENDP

checkLEFT PROC

    push ebx
    movzx ebx, xPos
    movzx eax, yPos

    dec ebx

    call checkPOS

    pop ebx

ret
checkLEFT ENDP

checkRIGHT PROC

    push ebx
    movzx ebx, xPos
    movzx eax, yPos

    inc ebx

    call checkPOS
    pop ebx

ret
checkRIGHT ENDP


boundCHECK PROC

    cmp al, ' '
    je okay

    cmp al, '.'
    je okay1

    cmp al, 'b'
    je okay2

    mov al,0
    ret
    okay1:
    mov eax,1
    mul level
    add [score],eax
    jmp okay

    okay2:
    mov eax,1
    mul level
    mov ebx,10
    mul ebx
    add [score],eax
    jmp okay

    okay:
    mov al,1

ret
boundCHECK ENDP

reInitialize PROC

    mov ecx, 255
    mov dl,0
    mov dh,0
reHead:
    call gotoxy
    mov eax,' '
    call writechar
    inc dl
    loop reHead

    mov edi,offset maze
    mov esi,offset mazeT
    mov ecx, mapSize
l1:
    mov al,[edi]
    mov [esi],al
    inc edi
    inc esi
    loop l1

    mov ecx, 255
    mov edi, offset pName
    l2:
        mov al,0
        mov [edi],al
        inc edi
        loop l2
    
    mov tempX,0
    mov tempY,0

    mov temp,0

    mov xPos, 50
    mov yPos, 17

    mov xPosG1, 3
    mov yPosG1, 5

    mov xPosG2, 4
    mov yPosG2, 5

    mov xPosG3, 5
    mov yPosG3, 5

    mov xCoinPos, 0
    mov yCoinPos, 0

    mov inputChar, 0

    mov lastMove , 1
    mov lastMove2, 2
    mov lastMove3, 2
    mov lastMove4, 2

    mov lives, 3
    mov level,1
    mov score,0

ret
reInitialize ENDP

resetLEVEL PROC

    mov esi, offset mazeT
    cmp [level],2
    jne next
    mov edi,offset maze2
    mov ecx, mapSize
    jmp l1
    next:
    mov edi, offset maze3
    mov ecx, mapSize

l1:
    mov al,[edi]
    mov [esi],al
    inc edi
    inc esi
    loop l1

    
    mov tempX,0
    mov tempY,0

    mov temp,0

    mov xPos, 50
    mov yPos, 17

    mov xPosG1, 3
    mov yPosG1, 5

    mov xPosG2, 4
    mov yPosG2, 5

    mov xPosG3, 5
    mov yPosG3, 5

    mov xCoinPos, 0
    mov yCoinPos, 0

    mov inputChar, 0

    mov lastMove , 1
    mov lastMove2, 2
    mov lastMove3, 2
    mov lastMove4, 2

    call drawMazeT

ret
resetLEVEL ENDP


END main